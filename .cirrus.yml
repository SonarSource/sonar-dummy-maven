# release-engineering-ci-staging
#gcp_credentials: ENCRYPTED[aebc0a5ebae9bfa7262fed18dc181d97db901420322b0483a8c8e04751ecde508c8eefbef3e85d17d5e2bdb829c117cb]
# release-engineering-ci-prod
gcp_credentials: ENCRYPTED[!149d4005ecdba4cdd78bb5ba22756ebb98bf8e3367ee2e9ab08c5a1608c0d3e3b501904b67a1d67c0b63085e469d7dde!]

# language-team-staging gcp project
#gcp_credentials: ENCRYPTED[!1381ef0f0c48f6705097f17299114c40c859181fdca68834bf429446de4142f216a4e9c714bbdad9ad87947ad0ddd4c6!]
# test-cirrus
#gcp_credentials: ENCRYPTED[!af138a5aa099fbf14e2683d14deecf93fa8fbb3501fa07a96de500c77b942ed9a6b58bf63971bbbafd93620083038129!]

env:
  CIRRUS_CLONE_DEPTH: 20
  ARTIFACTORY_PRIVATE_USERNAME: vault-sonarsource-sonar-dummy-private-reader
  ARTIFACTORY_DEPLOY_USERNAME: vault-sonarsource-sonar-dummy-qa-deployer
  #Possible values for ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa, sonarsource-public-qa
  ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa
  # access license key
  #GITHUB_TOKEN: ENCRYPTED[!f458126aa9ed2ac526f220c5acb51dd9cc255726b34761a56fc78d4294c11089502a882888cef0ca7dd4085e72e611a5!]
  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: bash

container_definition: &CONTAINER_DEFINITION
  image: eu.gcr.io/release-engineering-ci-prod/base:j11-latest
  cluster_name: cirrus-ci
  zone: europe-west4-b
  namespace: default

win_vm_definition: &WINDOWS_VM_DEFINITION
  gce_instance:
    image_project: release-engineering-ci-prod
    image_family: lt-base-windows-jdk17
    platform: windows
    zone: europe-west4-b
    preemptible: false
    disk: 80
    type: n1-standard-4

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == 'master' || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*" || $CIRRUS_BUILD_SOURCE == 'api' )

vault: &VAULT
  vault_script:
    - vault.sh

build_task:
  <<: *ONLY_SONARSOURCE_QA
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  env:
    # analysis on next
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    #allow deployment of pull request artifacts to repox
    DEPLOY_PULL_REQUEST: true
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository 
  <<: *VAULT
  build_script:
    - source cirrus-env BUILD-PRIVATE
    - regular_mvn_build_deploy_analyze
  cleanup_before_cache_script: cleanup_maven_repository

build_win_task:
  <<: *ONLY_SONARSOURCE_QA
  <<: *WINDOWS_VM_DEFINITION
  <<: *VAULT
  build_script:
    - source cirrus-env CI-PRIVATE
    - mvn.cmd test
  cleanup_before_cache_script: cleanup_maven_repository

promote_task:
  depends_on:
    - build
    - build_win
  <<: *ONLY_SONARSOURCE_QA
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 1
    memory: 1G
  env:
    #promotion cloud function
    #artifacts that will have downloadable links in burgr
    ARTIFACTS: com.sonarsource.dummy:sonar-dummy-plugin:jar
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository 
  <<: *VAULT
  script:
   - cirrus_promote_maven
  cleanup_before_cache_script: cleanup_maven_repository
